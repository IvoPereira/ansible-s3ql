---
- name: "Directories Exists"
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ s3ql_user }}"
    group: "{{ s3ql_group }}"
    mode: 0775
  with_items:
     - "{{ s3ql_cache_path }}"
     - "{{ s3ql_log_root }}"
  tags:
    - directory-structure

- name: Creates a run-once directory for s3ql
  file: path=/usr/local/bin/.runonce state=directory

- name: Configure | /etc/fuse.conf | user_allow_other
  lineinfile:
    state: present
    dest: /etc/fuse.conf
    regexp: '^#?user_allow_other'
    line: user_allow_other
  tags:
    - configuration
    - fuse

- name: "Directory Exists {{ s3ql_mountpoint }}"
  file:
    state: directory
    path: "{{ s3ql_mountpoint }}"
    owner: "{{ s3ql_user }}"
    group: "{{ s3ql_group }}"
    mode: 0775
  ignore_errors: True
  tags:
    - directory-structure

- name: "Upload Authinfo"
  template:
    src: "{{ item }}"
    dest: "{{s3ql_authinfo_path}}/{{ item }}"
    mode: 0400
    owner: "{{ s3ql_user }}"
    group: "{{ s3ql_group }}"
  with_items:
    - s3ql-authinfo
  tags:
    - configuration
    - template-configuration

- name: Copy S3QL mountfs wrapper script
  copy: src=s3ql_makefs.expect dest=/usr/local/bin/.runonce/s3ql_makefs.expect mode=0700

- name: Make S3QL filesystem (run only once)
  script: s3ql_makefs.sh creates=/usr/local/bin/.runonce/s3ql_makefs.done

- name: Copy S3QL systemd unit file
  copy: src=s3ql.service dest=/etc/systemd/system/s3ql.service

- name: Enable S3QL and mount {{ s3ql_bucket_name }} to {{ s3ql_mountpoint }}
  service: name=s3ql.service enabled=yes state=started
  tags:
  - mount-volume
